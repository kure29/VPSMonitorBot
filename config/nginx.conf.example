# VPS监控系统 Nginx配置示例
# 将此文件复制到 /etc/nginx/sites-available/vps-monitor
# 然后创建软链接：ln -s /etc/nginx/sites-available/vps-monitor /etc/nginx/sites-enabled/

# 上游服务器配置
upstream vps_monitor_backend {
    server 127.0.0.1:8000;
    # 如果有多个实例，可以添加更多服务器进行负载均衡
    # server 127.0.0.1:8001;
    # server 127.0.0.1:8002;
}

# HTTP服务器配置 (重定向到HTTPS)
server {
    listen 80;
    listen [::]:80;
    server_name your-domain.com www.your-domain.com;
    
    # 重定向所有HTTP请求到HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS服务器配置
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name your-domain.com www.your-domain.com;
    
    # SSL证书配置
    ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/your-domain.com/chain.pem;
    
    # SSL安全配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # 安全头
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'" always;
    
    # 基本配置
    root /opt/vps-monitor/web;
    index index.html;
    
    # 日志配置
    access_log /var/log/nginx/vps-monitor.access.log;
    error_log /var/log/nginx/vps-monitor.error.log;
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Web管理界面
    location / {
        try_files $uri $uri/ =404;
        
        # 缓存静态文件
        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # API代理
    location /api/ {
        proxy_pass http://vps_monitor_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # 超时设置
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # 缓冲设置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # 错误处理
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    }
    
    # WebSocket支持 (如果需要实时通信)
    location /ws/ {
        proxy_pass http://vps_monitor_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket特定设置
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
    }
    
    # 健康检查
    location /health {
        proxy_pass http://vps_monitor_backend/health;
        proxy_set_header Host $host;
        access_log off;
    }
    
    # 监控数据导出
    location /export/ {
        proxy_pass http://vps_monitor_backend/export/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 增加超时时间，因为导出可能需要较长时间
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # 禁止访问敏感文件
    location ~ /\. {
        deny all;
    }
    
    location ~ \.(conf|json|log|bak|backup)$ {
        deny all;
    }
    
    # 限制访问某些路径
    location /config/ {
        deny all;
    }
    
    location /scripts/ {
        deny all;
    }
    
    # 机器人文件验证（如果使用Telegram Web Hook）
    location /telegram/ {
        proxy_pass http://vps_monitor_backend/telegram/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 只允许Telegram的IP访问
        allow 149.154.160.0/20;
        allow 91.108.4.0/22;
        deny all;
    }
    
    # 错误页面
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /opt/vps-monitor/web;
        internal;
    }
    
    location = /50x.html {
        root /opt/vps-monitor/web;
        internal;
    }
}

# 如果需要支持多个域名的子配置
# server {
#     listen 443 ssl http2;
#     server_name monitor.your-domain.com;
#     
#     # 使用相同的SSL配置
#     include /etc/nginx/snippets/ssl-your-domain.com.conf;
#     
#     # 特定配置
#     location / {
#         proxy_pass http://vps_monitor_backend;
#         # ... 其他代理配置
#     }
# }

# 监控状态页面（可选）
server {
    listen 8080;
    server_name localhost;
    
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }
}
